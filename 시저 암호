## 시저 암호
## 문제 설명

## 어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다. 
## 예를 들어 "AB"는 1만큼 밀면 "BC"가 되고, 3만큼 밀면 "DE"가 됩니다. 
## "z"는 1만큼 밀면 "a"가 됩니다. 문자열 s와 거리 n을 입력받아 s를 n만큼 민 암호문을 만드는 함수, solution을 완성하시오

## 제한 조건
## 1) 공백은 아무리 밀어도 공백이다
## 2) s는 알파벳 소문자, 대문자, 공백으로만 이루어져 있다
## 3) s의 길이는 8000이하이다
## 4) n은 1 이상, 25이하인 자연수이다

## 입출력 예시
## 1) s = "AB", n = 1, result = "BC"
## 2) s = "z", n = 1, result = "a"
## 3) s = "a B z", n = 4, result = "e F d"

function solution(s, n) {
    
    let arrS = s.split("")
    let result = []
    
    let upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    // arrUpper.length = 26, 마지막 idx = 25
    let arrUpper = upper.split("")
    
    let lower = upper.toLowerCase()
    // arrLower.length = 26, 마지막 idx = 25
    let arrLower = lower.split("")
    
    for(let i = 0; i < arrS.length; i++) {
        
        // 공백이면
        if(arrS[i] === " ") {
            result.push(arrS[i])
        } 
        // 소문자일 경우
        else if(arrLower.includes(arrS[i])) {
            let lowerIdx = arrLower.indexOf(arrS[i])
            let moveIdx = lowerIdx + n

            if(moveIdx > arrLower.length - 1) {
                result.push(arrLower[moveIdx - arrLower.length])
            } else {
                result.push(arrLower[moveIdx])
            }
        }
        // 대문자일 경우
        else {
            let upperIdx = arrUpper.indexOf(arrS[i])
            let moveIdx = upperIdx + n

            if(moveIdx > arrUpper.length - 1) {
                result.push(arrUpper[moveIdx - arrUpper.length])
            } else {
                result.push(arrUpper[moveIdx])
            }
        }
        
    }    
    
    return result.join("")
}
